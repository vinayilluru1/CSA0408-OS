#include <stdio.h>
#include <stdlib.h>

int main() {
    int n, i, j, head, size, direction;
    int seek = 0, temp, index;
    float avg_seek;

    printf("Enter number of disk requests: ");
    scanf("%d", &n);

    int requests[n];

    printf("Enter the disk request sequence:\n");
    for (i = 0; i < n; i++) {
        scanf("%d", &requests[i]);
    }

    printf("Enter initial head position: ");
    scanf("%d", &head);

    printf("Enter total disk size (cylinders): ");
    scanf("%d", &size);

    printf("Enter head movement direction (1 = high, 0 = low): ");
    scanf("%d", &direction);

    // Add initial head position
    requests[n] = head;
    n++;

    // Add 0 and size-1 (end points of disk)
    requests[n] = 0;
    requests[n+1] = size - 1;
    n += 2;

    // Sort requests
    for (i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            if (requests[i] > requests[j]) {
                temp = requests[i];
                requests[i] = requests[j];
                requests[j] = temp;
            }
        }
    }

    // Find index of head
    for (i = 0; i < n; i++) {
        if (requests[i] == head) {
            index = i;
            break;
        }
    }

    printf("\nDisk Head Movement:\n");

    if (direction == 1) { // Moving towards higher end
        for (i = index; i < n; i++) {
            seek += abs(requests[i] - head);
            printf("Head moves from %d to %d with seek %d\n", head, requests[i], abs(requests[i] - head));
            head = requests[i];
        }
        for (i = index - 1; i >= 0; i--) {
            seek += abs(requests[i] - head);
            printf("Head moves from %d to %d with seek %d\n", head, requests[i], abs(requests[i] - head));
            head = requests[i];
        }
    } else { // Moving towards lower end
        for (i = index; i >= 0; i--) {
            seek += abs(requests[i] - head);
            printf("Head moves from %d to %d with seek %d\n", head, requests[i], abs(requests[i] - head));
            head = requests[i];
        }
        for (i = index + 1; i < n; i++) {
            seek += abs(requests[i] - head);
            printf("Head moves from %d to %d with seek %d\n", head, requests[i], abs(requests[i] - head));
            head = requests[i];
        }
    }

    avg_seek = (float)seek / (n - 2); // excluding extra 0 and size-1

    printf("\nTotal Seek Time = %d\n", seek);
    printf("Average Seek Time = %.2f\n", avg_seek);

    return 0;
}
